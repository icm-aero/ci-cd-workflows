name: MS Builk Docker No Cache

on:
  workflow_call:
    secrets:
      CA_CRT:
        required: true
      USER_CRT:
        required: true
      USER_KEY:
        required: true

jobs:

  docker_build_no_cache:

    runs-on: ubuntu-latest

    steps:    
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0

    - name: ProGet Tests
      run: |
        pwsh ./replace.ps1

    # - name: Install GitVersion
    #   uses: gittools/actions/gitversion/setup@v0.9.7
    #   with:
    #     versionSpec: '5.x'
    # - name: Determine Version
    #   uses: gittools/actions/gitversion/execute@v0.9.7

    - name: Install OpenVPN
      run: |
        sudo apt-get update
        sudo apt-get --assume-yes --no-install-recommends install openvpn openvpn-systemd-resolved resolvconf     
    - name: Setup VPN config
      run: |
        echo "${{ secrets.CA_CRT }}" > ca.crt
        echo "${{ secrets.USER_CRT }}" > user.crt
        echo "${{ secrets.USER_KEY }}" > user.key
    - name: Connect VPN
      run: sudo openvpn --config ".github/vpn/config.ovpn" --daemon
    - name: Wait for a VPN connection
      timeout-minutes: 1
      run: until ping -c1 proget.dev.icm.aero; do cat /etc/resolv.conf; sleep 2; done

    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # It also restores the cache if it exists.
    #- uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
    #  continue-on-error: true
    - name: Restart Docker
      run: sudo systemctl restart docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        tags: user/app:latest
        outputs: .
        add-hosts: proget.dev.icm.aero:172.32.254.21

    #- name: Build the Docker image
    #  run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

    - name: Upload Application
      uses: actions/upload-artifact@v2
      with:
        name: Application
        path: Release/

    - name: Kill VPN connection
      if: always()
      run: |
        wget --timeout=10 --tries=1 http://proget.dev.icm.aero:8624/nuget/MicroServices/v3/index.json 
        sudo killall openvpn          

    - name: Upload VPN logs
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: VPN logs
        path: vpn.log

 
